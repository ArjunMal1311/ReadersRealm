// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String?   @unique
  password      String?
  name          String?
  avatar        String?
  role          String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  image         String?

  cartItems Json[] @default([])

  orders Order[]
  Book   Book[]
  Review Review[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookId    String   @db.ObjectId
  userId    String   @db.ObjectId

  book Book @relation(fields: [bookId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Book {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  author      String
  description String
  price       Int
  imageUrl    String
  category    String
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reviews Review[]
}

model Order {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime  @default(now())
  shippingInfo  String
  orderItems    Json[]
  paymentInfo   String
  paidAt        DateTime
  itemsPrice    Int
  orderStatus   String
  deliveredAt   DateTime?
  User          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
}
